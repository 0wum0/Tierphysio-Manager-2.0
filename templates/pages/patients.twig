{% extends 'layouts/base.twig' %}

{% block title %}Patientenverwaltung - {{ parent() }}{% endblock %}

{% block scripts %}
{{ parent() }}
<script src="/public/js/patients.js"></script>
{% endblock %}

{% block content %}
<div class="space-y-6 animate-in" x-data="patientsManager()" x-init="init()">
    <!-- Header Section -->
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
        <div>
            <h1 class="text-3xl font-heading font-bold bg-gradient-to-r from-purple-400 to-indigo-400 bg-clip-text text-transparent">
                Patientenverwaltung
            </h1>
            <p class="text-gray-600 dark:text-gray-400 mt-2">
                Verwalten Sie alle Ihre tierischen Patienten an einem Ort
            </p>
        </div>
        <div class="mt-4 sm:mt-0">
            <button @click="openCreateModal()" 
                    class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-purple-600 to-indigo-600 text-white rounded-lg hover:from-purple-700 hover:to-indigo-700 transition-all duration-200 shadow-lg hover:shadow-xl">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Neuer Patient
            </button>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="bg-white/10 dark:bg-gray-800/50 backdrop-blur-md rounded-2xl border border-purple-500/20 p-6 shadow-xl">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div class="md:col-span-2">
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Suche</label>
                <div class="relative">
                    <input type="text" 
                           x-model="searchQuery"
                           @input="debounceSearch()"
                           placeholder="Name, Besitzer oder Chipnummer eingeben..." 
                           class="w-full px-4 py-2 pl-10 bg-white/50 dark:bg-gray-700/50 border border-purple-300/30 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent dark:text-white placeholder-gray-400">
                    <svg class="absolute left-3 top-2.5 w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                    </svg>
                </div>
            </div>
            <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Tierart</label>
                <select x-model="speciesFilter" @change="loadPatients()" class="w-full px-4 py-2 bg-white/50 dark:bg-gray-700/50 border border-purple-300/30 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent dark:text-white">
                    <option value="">Alle Arten</option>
                    <option value="dog">🐕 Hund</option>
                    <option value="cat">🐈 Katze</option>
                    <option value="horse">🐴 Pferd</option>
                    <option value="rabbit">🐰 Hase</option>
                    <option value="bird">🦜 Vogel</option>
                    <option value="reptile">🦎 Reptil</option>
                    <option value="other">🐾 Andere</option>
                </select>
            </div>
        </div>
    </div>

    <!-- Loading State -->
    <div x-show="loading" class="flex justify-center items-center py-12">
        <div class="animate-spin rounded-full h-12 w-12 border-4 border-purple-500 border-t-transparent"></div>
    </div>

    <!-- Patients Grid -->
    <div x-show="!loading" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Patient Cards -->
        <template x-for="patient in patients" :key="patient.id">
            <div class="patient-card bg-white/10 dark:bg-gray-800/50 backdrop-blur-md rounded-2xl border border-purple-500/20 overflow-hidden hover:shadow-2xl hover:border-purple-400/40 transition-all duration-300 group cursor-pointer" :data-id="patient.id">
                <div class="aspect-video bg-gradient-to-br from-purple-600/20 to-indigo-600/20 relative">
                    <div class="absolute inset-0 flex items-center justify-center">
                        <div class="w-24 h-24 bg-white/20 rounded-full flex items-center justify-center">
                            <span class="text-4xl" x-text="getSpeciesIcon(patient.species)"></span>
                        </div>
                    </div>
                    <span class="absolute top-3 right-3 px-2 py-1 bg-green-500/80 text-white text-xs rounded-full">Aktiv</span>
                </div>
                <div class="p-5">
                    <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1" x-text="patient.name"></h3>
                    <p class="text-sm text-gray-600 dark:text-gray-400">
                        <span x-text="getSpeciesName(patient.species)"></span>
                        <span x-show="patient.breed" x-text="' • ' + patient.breed"></span>
                        <span x-show="patient.birth_date" x-text="' • ' + calculateAge(patient.birth_date)"></span>
                    </p>
                    <p class="text-sm text-purple-600 dark:text-purple-400 mt-2">
                        Besitzer: <span x-text="patient.owner_full_name || '—'"></span>
                    </p>
                    <div class="flex items-center justify-between mt-4 pt-4 border-t border-gray-200/20">
                        <div class="flex space-x-2">
                            <button @click.stop="editPatient(patient)" class="text-blue-500 hover:text-blue-400 transition-colors" title="Bearbeiten">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                </svg>
                            </button>
                            <button @click.stop="deletePatient(patient)" class="text-red-500 hover:text-red-400 transition-colors" title="Löschen">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                </svg>
                            </button>
                        </div>
                        <button @click.stop="viewDetailModal(patient)" class="text-purple-500 hover:text-purple-400 transition-colors" title="Details anzeigen">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        </template>

        <!-- Add Patient Card -->
        <div @click="openCreateModal()" class="bg-white/10 dark:bg-gray-800/50 backdrop-blur-md rounded-2xl border-2 border-dashed border-purple-500/30 flex items-center justify-center min-h-[300px] hover:border-purple-400/50 transition-all duration-300 cursor-pointer group">
            <div class="text-center">
                <div class="w-16 h-16 bg-purple-500/20 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:bg-purple-500/30 transition-colors">
                    <svg class="w-8 h-8 text-purple-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                </div>
                <p class="text-gray-600 dark:text-gray-400">Patient hinzufügen</p>
            </div>
        </div>
    </div>

    <!-- No Results -->
    <div x-show="!loading && patients.length === 0" class="text-center py-12">
        <svg class="w-24 h-24 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
        </svg>
        <h3 class="text-lg font-semibold text-gray-700 dark:text-gray-300">Keine Patienten gefunden</h3>
        <p class="text-gray-500 dark:text-gray-400 mt-2">Fügen Sie Ihren ersten Patienten hinzu!</p>
    </div>

    <!-- Create/Edit Modal -->
    <div x-show="showModal" 
         x-transition:enter="transition ease-out duration-300"
         x-transition:enter-start="opacity-0"
         x-transition:enter-end="opacity-100"
         x-transition:leave="transition ease-in duration-200"
         x-transition:leave-start="opacity-100"
         x-transition:leave-end="opacity-0"
         class="fixed inset-0 z-50 overflow-y-auto" 
         style="display: none;">
        <div class="flex items-center justify-center min-h-screen px-4 pt-4 pb-20 text-center sm:block sm:p-0">
            <!-- Backdrop -->
            <div class="fixed inset-0 transition-opacity" aria-hidden="true">
                <div class="absolute inset-0 bg-gray-500 dark:bg-gray-900 opacity-75"></div>
            </div>

            <!-- Modal Panel -->
            <div class="inline-block align-bottom bg-white dark:bg-gray-800 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full">
                <form @submit.prevent="savePatient()" id="patientForm">
                    <div class="bg-white dark:bg-gray-800 px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                        <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white mb-6" x-text="modalTitle"></h3>
                        
                        <!-- Tab Navigation -->
                        <div class="border-b border-gray-200 dark:border-gray-700 mb-6">
                            <nav class="-mb-px flex space-x-8" aria-label="Tabs">
                                <button type="button"
                                        @click="activeTab = 'patient'"
                                        :class="activeTab === 'patient' ? 'border-purple-500 text-purple-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'"
                                        class="py-2 px-1 border-b-2 font-medium text-sm">
                                    Patientendaten
                                </button>
                                <button type="button"
                                        @click="activeTab = 'owner'"
                                        :class="activeTab === 'owner' ? 'border-purple-500 text-purple-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'"
                                        class="py-2 px-1 border-b-2 font-medium text-sm">
                                    Besitzerdaten
                                </button>
                            </nav>
                        </div>
                        
                        <!-- Patient Tab -->
                        <div x-show="activeTab === 'patient'" class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <!-- Name -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Name *</label>
                                <input type="text" x-model="currentPatient.name" required
                                       class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                            </div>

                            <!-- Species -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Tierart *</label>
                                <select x-model="currentPatient.species" required
                                        class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                    <option value="">Bitte wählen</option>
                                    <option value="dog">🐕 Hund</option>
                                    <option value="cat">🐈 Katze</option>
                                    <option value="horse">🐴 Pferd</option>
                                    <option value="rabbit">🐰 Hase</option>
                                    <option value="bird">🦜 Vogel</option>
                                    <option value="reptile">🦎 Reptil</option>
                                    <option value="other">🐾 Andere</option>
                                </select>
                            </div>

                            <!-- Breed -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Rasse</label>
                                <input type="text" x-model="currentPatient.breed"
                                       class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                            </div>

                            <!-- Birth Date -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Geburtsdatum</label>
                                <input type="date" x-model="currentPatient.birth_date"
                                       class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                            </div>

                            <!-- Gender -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Geschlecht</label>
                                <select x-model="currentPatient.gender"
                                        class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                    <option value="unknown">Unbekannt</option>
                                    <option value="male">Männlich</option>
                                    <option value="female">Weiblich</option>
                                    <option value="neutered_male">Kastriert (männlich)</option>
                                    <option value="spayed_female">Kastriert (weiblich)</option>
                                </select>
                            </div>

                            <!-- Weight -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Gewicht (kg)</label>
                                <input type="number" step="0.1" x-model="currentPatient.weight"
                                       class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                            </div>

                            <!-- Microchip -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Chip-Nummer</label>
                                <input type="text" x-model="currentPatient.microchip"
                                       class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                            </div>

                            <!-- Color -->
                            <div>
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Farbe</label>
                                <input type="text" x-model="currentPatient.color"
                                       class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                            </div>

                            <!-- Notes -->
                            <div class="md:col-span-2">
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Notizen</label>
                                <textarea x-model="currentPatient.notes" rows="3"
                                          class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500"></textarea>
                            </div>
                        </div>

                        <!-- Owner Tab -->
                        <div x-show="activeTab === 'owner'" class="space-y-4">
                            <!-- Owner Selection or New -->
                            <div class="bg-purple-50 dark:bg-purple-900/20 rounded-lg p-4 mb-4">
                                <label class="flex items-center space-x-3">
                                    <input type="radio" x-model="ownerMode" value="existing" class="text-purple-600 focus:ring-purple-500">
                                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Bestehenden Besitzer auswählen</span>
                                </label>
                                <label class="flex items-center space-x-3 mt-2">
                                    <input type="radio" x-model="ownerMode" value="new" class="text-purple-600 focus:ring-purple-500">
                                    <span class="text-sm font-medium text-gray-700 dark:text-gray-300">Neuen Besitzer anlegen</span>
                                </label>
                            </div>

                            <!-- Existing Owner Selection -->
                            <div x-show="ownerMode === 'existing'" class="transition-all duration-200">
                                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Besitzer auswählen *</label>
                                <select x-model="currentPatient.owner_id" :required="ownerMode === 'existing'"
                                        class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                    <option value="">Bitte wählen</option>
                                    <template x-for="owner in owners" :key="owner.id">
                                        <option :value="owner.id" x-text="`${owner.first_name} ${owner.last_name} (${owner.customer_number || 'K00000'})`"></option>
                                    </template>
                                </select>
                            </div>

                            <!-- New Owner Form -->
                            <div x-show="ownerMode === 'new'" class="grid grid-cols-1 md:grid-cols-2 gap-4 transition-all duration-200">
                                <!-- Salutation -->
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Anrede</label>
                                    <select x-model="currentOwner.salutation"
                                            class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                        <option value="Herr">Herr</option>
                                        <option value="Frau">Frau</option>
                                        <option value="Divers">Divers</option>
                                        <option value="Firma">Firma</option>
                                    </select>
                                </div>

                                <!-- Empty space for layout -->
                                <div></div>

                                <!-- First Name -->
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Vorname *</label>
                                    <input type="text" x-model="currentOwner.first_name" :required="ownerMode === 'new'"
                                           class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                </div>

                                <!-- Last Name -->
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Nachname *</label>
                                    <input type="text" x-model="currentOwner.last_name" :required="ownerMode === 'new'"
                                           class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                </div>

                                <!-- Phone -->
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Telefon</label>
                                    <input type="tel" x-model="currentOwner.phone"
                                           class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                </div>

                                <!-- Mobile -->
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Mobil</label>
                                    <input type="tel" x-model="currentOwner.mobile"
                                           class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                </div>

                                <!-- Email -->
                                <div class="md:col-span-2">
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">E-Mail</label>
                                    <input type="email" x-model="currentOwner.email"
                                           class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                </div>

                                <!-- Street -->
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Straße</label>
                                    <input type="text" x-model="currentOwner.street"
                                           class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                </div>

                                <!-- House Number -->
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Hausnummer</label>
                                    <input type="text" x-model="currentOwner.house_number"
                                           class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                </div>

                                <!-- Postal Code -->
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">PLZ</label>
                                    <input type="text" x-model="currentOwner.postal_code"
                                           class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                </div>

                                <!-- City -->
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Stadt</label>
                                    <input type="text" x-model="currentOwner.city"
                                           class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-purple-500">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="bg-gray-50 dark:bg-gray-700 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                        <button type="submit" 
                                class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-gradient-to-r from-purple-600 to-indigo-600 text-base font-medium text-white hover:from-purple-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:ml-3 sm:w-auto sm:text-sm">
                            Speichern
                        </button>
                        <button type="button" @click="closeModal()"
                                class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 dark:border-gray-600 shadow-sm px-4 py-2 bg-white dark:bg-gray-800 text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
                            Abbrechen
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Patient Detail Modal -->
    <div id="patientDetailModal"
         x-data="patientDetailModal()" 
         x-show="open" 
         x-transition.opacity.duration.300ms
         class="fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/60 backdrop-blur-sm"
         x-cloak
         @keydown.escape.window="open = false"
         @patient-detail-open.window="openWithPatient($event.detail)"
         style="display: none;">
        
        <!-- Modal Content -->
        <div id="patientDetailModalContent"
             @click.away="open = false"
             class="bg-white dark:bg-gray-900 rounded-2xl shadow-2xl w-full max-w-5xl max-h-[90vh] overflow-hidden relative">
            
            <!-- Close Button -->
            <button @click="closeModal()"
                    class="absolute top-4 right-4 text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 transition-colors z-10">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
            
            <template x-if="patient">
                <div class="flex flex-col h-full">
                    <!-- Header with gradient background -->
                    <div class="bg-gradient-to-br from-lilac-600/20 to-purple-600/20 p-6 border-b border-lilac-500/20">
                        <div class="flex items-start justify-between">
                            <div>
                                <h2 class="text-3xl font-bold text-gray-900 dark:text-white mb-2" x-text="patient.name"></h2>
                                <div class="flex flex-wrap gap-3 text-sm">
                                    <span class="inline-flex items-center px-3 py-1 bg-lilac-100 dark:bg-lilac-900/30 text-lilac-700 dark:text-lilac-300 rounded-full">
                                        <span x-text="getSpeciesIcon(patient.species)" class="mr-1"></span>
                                        <span x-text="getSpeciesName(patient.species)"></span>
                                    </span>
                                    <span x-show="patient.breed" class="inline-flex items-center px-3 py-1 bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded-full">
                                        <span x-text="patient.breed"></span>
                                    </span>
                                    <span x-show="patient.birth_date" class="inline-flex items-center px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-full">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                                        </svg>
                                        <span x-text="calculateAge(patient.birth_date)"></span>
                                    </span>
                                    <span x-show="invoiceStatus" 
                                          :class="getInvoiceStatusClass(invoiceStatus)"
                                          class="inline-flex items-center px-3 py-1 rounded-full">
                                        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                                        </svg>
                                        <span x-text="getInvoiceStatusText(invoiceStatus)"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Tab Navigation -->
                    <div class="border-b border-lilac-300/30 dark:border-lilac-700/30 bg-gray-50 dark:bg-gray-800">
                        <nav class="flex space-x-1 px-6" aria-label="Tabs">
                            <button type="button"
                                    @click="switchTab('overview')"
                                    :class="activeTab === 'overview' ? 'border-lilac-500 text-lilac-600 dark:text-lilac-400' : 'border-transparent text-gray-500 hover:text-lilac-600 hover:border-lilac-300 dark:text-gray-400 dark:hover:text-lilac-400'"
                                    class="py-3 px-4 border-b-2 font-medium text-sm transition-colors duration-200">
                                <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                </svg>
                                Übersicht
                            </button>
                            <button type="button"
                                    @click="switchTab('medical')"
                                    :class="activeTab === 'medical' ? 'border-lilac-500 text-lilac-600 dark:text-lilac-400' : 'border-transparent text-gray-500 hover:text-lilac-600 hover:border-lilac-300 dark:text-gray-400 dark:hover:text-lilac-400'"
                                    class="py-3 px-4 border-b-2 font-medium text-sm transition-colors duration-200">
                                <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                </svg>
                                Befunde
                            </button>
                            <button type="button"
                                    @click="switchTab('notes')"
                                    :class="activeTab === 'notes' ? 'border-lilac-500 text-lilac-600 dark:text-lilac-400' : 'border-transparent text-gray-500 hover:text-lilac-600 hover:border-lilac-300 dark:text-gray-400 dark:hover:text-lilac-400'"
                                    class="py-3 px-4 border-b-2 font-medium text-sm transition-colors duration-200 relative">
                                <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                                </svg>
                                Notizen
                                <span x-show="notes.length > 0" class="ml-2 inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-lilac-200 dark:bg-lilac-800 text-lilac-800 dark:text-lilac-200">
                                    <span x-text="notes.length"></span>
                                </span>
                            </button>
                            <button type="button"
                                    @click="switchTab('documents')"
                                    :class="activeTab === 'documents' ? 'border-lilac-500 text-lilac-600 dark:text-lilac-400' : 'border-transparent text-gray-500 hover:text-lilac-600 hover:border-lilac-300 dark:text-gray-400 dark:hover:text-lilac-400'"
                                    class="py-3 px-4 border-b-2 font-medium text-sm transition-colors duration-200">
                                <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"></path>
                                </svg>
                                Dokumente
                                <span x-show="documents.length > 0" class="ml-2 inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-lilac-200 dark:bg-lilac-800 text-lilac-800 dark:text-lilac-200">
                                    <span x-text="documents.length"></span>
                                </span>
                            </button>
                        </nav>
                    </div>
                    
                    <!-- Content with scrollable area -->
                    <div class="overflow-y-auto flex-1">
                        <!-- Overview Tab -->
                        <div x-show="activeTab === 'overview'" x-transition:enter="transition ease-out duration-300"
                             x-transition:enter-start="opacity-0 transform translate-x-4"
                             x-transition:enter-end="opacity-100 transform translate-x-0"
                             class="p-6 space-y-6">
                            
                            <!-- Patient Photo and Basic Info -->
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                                <!-- Photo Section -->
                                <div class="md:col-span-1">
                                    <div class="bg-white/50 dark:bg-gray-800/50 backdrop-blur rounded-xl p-4 border border-lilac-200/30 dark:border-lilac-700/30">
                                        <div class="aspect-square bg-gradient-to-br from-lilac-100 to-purple-100 dark:from-lilac-900/30 dark:to-purple-900/30 rounded-lg relative overflow-hidden group">
                                            <template x-if="patient.image">
                                                <img :src="patient.image" :alt="patient.name" class="w-full h-full object-cover">
                                            </template>
                                            <template x-if="!patient.image">
                                                <div class="flex items-center justify-center h-full">
                                                    <span class="text-6xl opacity-50" x-text="getSpeciesIcon(patient.species)"></span>
                                                </div>
                                            </template>
                                            <div class="absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity duration-200 flex items-center justify-center">
                                                <label for="patientPhotoUpload" class="cursor-pointer">
                                                    <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                                    </svg>
                                                </label>
                                                <input type="file" id="patientPhotoUpload" @change="uploadPatientPhoto($event)" accept="image/*" class="hidden">
                                            </div>
                                        </div>
                                        <button @click="editPatient(patient)" 
                                                class="w-full mt-4 px-4 py-2 bg-gradient-to-r from-lilac-600 to-purple-600 text-white rounded-lg hover:from-lilac-700 hover:to-purple-700 transition-all duration-200 shadow-lg hover:shadow-xl text-sm font-medium">
                                            Patient bearbeiten
                                        </button>
                                    </div>
                                </div>
                                
                                <!-- Patient & Owner Details -->
                                <div class="md:col-span-2 space-y-4">
                                    <!-- Patient Details -->
                                    <div class="bg-white/50 dark:bg-gray-800/50 backdrop-blur rounded-xl p-4 border border-lilac-200/30 dark:border-lilac-700/30">
                                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3 flex items-center">
                                            <svg class="w-5 h-5 mr-2 text-lilac-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                                            </svg>
                                            Patientendaten
                                        </h3>
                                        <div class="grid grid-cols-2 gap-3 text-sm">
                                            <div>
                                                <span class="text-gray-600 dark:text-gray-400">Patienten-Nr:</span>
                                                <p class="font-medium text-gray-900 dark:text-white" x-text="patient.patient_number || '—'"></p>
                                            </div>
                                            <div>
                                                <span class="text-gray-600 dark:text-gray-400">Geschlecht:</span>
                                                <p class="font-medium text-gray-900 dark:text-white" x-text="getGenderName(patient.gender)"></p>
                                            </div>
                                            <div x-show="patient.weight">
                                                <span class="text-gray-600 dark:text-gray-400">Gewicht:</span>
                                                <p class="font-medium text-gray-900 dark:text-white" x-text="patient.weight + ' kg'"></p>
                                            </div>
                                            <div x-show="patient.color">
                                                <span class="text-gray-600 dark:text-gray-400">Farbe:</span>
                                                <p class="font-medium text-gray-900 dark:text-white" x-text="patient.color"></p>
                                            </div>
                                            <div x-show="patient.microchip">
                                                <span class="text-gray-600 dark:text-gray-400">Chip-Nr:</span>
                                                <p class="font-medium text-gray-900 dark:text-white font-mono text-xs" x-text="patient.microchip"></p>
                                            </div>
                                            <div x-show="patient.birth_date">
                                                <span class="text-gray-600 dark:text-gray-400">Geburtsdatum:</span>
                                                <p class="font-medium text-gray-900 dark:text-white" x-text="formatDate(patient.birth_date)"></p>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Owner Details -->
                                    <div class="bg-white/50 dark:bg-gray-800/50 backdrop-blur rounded-xl p-4 border border-lilac-200/30 dark:border-lilac-700/30">
                                        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3 flex items-center">
                                            <svg class="w-5 h-5 mr-2 text-lilac-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                            </svg>
                                            Besitzer
                                        </h3>
                                        <div class="grid grid-cols-2 gap-3 text-sm">
                                            <div>
                                                <span class="text-gray-600 dark:text-gray-400">Name:</span>
                                                <p class="font-medium text-gray-900 dark:text-white" x-text="patient.owner_full_name || '—'"></p>
                                            </div>
                                            <div x-show="patient.owner_phone">
                                                <span class="text-gray-600 dark:text-gray-400">Telefon:</span>
                                                <a :href="'tel:' + patient.owner_phone" class="font-medium text-lilac-600 dark:text-lilac-400 hover:underline" x-text="patient.owner_phone"></a>
                                            </div>
                                            <div x-show="patient.owner_mobile">
                                                <span class="text-gray-600 dark:text-gray-400">Mobil:</span>
                                                <a :href="'tel:' + patient.owner_mobile" class="font-medium text-lilac-600 dark:text-lilac-400 hover:underline" x-text="patient.owner_mobile"></a>
                                            </div>
                                            <div x-show="patient.owner_email">
                                                <span class="text-gray-600 dark:text-gray-400">E-Mail:</span>
                                                <a :href="'mailto:' + patient.owner_email" class="font-medium text-lilac-600 dark:text-lilac-400 hover:underline text-xs" x-text="patient.owner_email"></a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Medical Records Tab -->
                        <div x-show="activeTab === 'medical'" x-transition:enter="transition ease-out duration-300"
                             x-transition:enter-start="opacity-0 transform translate-x-4"
                             x-transition:enter-end="opacity-100 transform translate-x-0"
                             class="p-6 space-y-6">
                            
                            <!-- Add New Record -->
                            <div class="bg-white/50 dark:bg-gray-800/50 backdrop-blur rounded-xl p-4 border border-lilac-200/30 dark:border-lilac-700/30">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Neuer Befund</h3>
                                <textarea x-model="newMedicalRecord" 
                                          placeholder="Befund eingeben..." 
                                          rows="4"
                                          class="w-full px-3 py-2 bg-white/70 dark:bg-gray-700/70 border border-lilac-300/30 rounded-lg focus:ring-2 focus:ring-lilac-500 focus:border-transparent dark:text-white placeholder-gray-400"></textarea>
                                <button @click="saveMedicalRecord()" 
                                        :disabled="!newMedicalRecord.trim()"
                                        class="mt-3 px-4 py-2 bg-gradient-to-r from-lilac-600 to-purple-600 text-white rounded-lg hover:from-lilac-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-lg hover:shadow-xl">
                                    <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V2"></path>
                                    </svg>
                                    Speichern
                                </button>
                            </div>
                            
                            <!-- Medical Records List -->
                            <div class="space-y-3">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Befundhistorie</h3>
                                <template x-for="record in medicalRecords" :key="record.id">
                                    <div class="bg-white/50 dark:bg-gray-800/50 backdrop-blur rounded-xl p-4 border border-lilac-200/30 dark:border-lilac-700/30">
                                        <div class="flex justify-between items-start mb-2">
                                            <div class="text-sm text-gray-600 dark:text-gray-400">
                                                <span x-text="formatDateTime(record.created_at)"></span>
                                                <span class="mx-2">•</span>
                                                <span x-text="record.created_by_name || 'System'"></span>
                                            </div>
                                            <button @click="deleteNote(record.id)" class="text-red-500 hover:text-red-400 transition-colors">
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                </svg>
                                            </button>
                                        </div>
                                        <p class="text-gray-900 dark:text-white whitespace-pre-wrap" x-text="record.content"></p>
                                    </div>
                                </template>
                                <div x-show="medicalRecords.length === 0" class="text-center py-8 text-gray-500 dark:text-gray-400">
                                    Noch keine Befunde vorhanden
                                </div>
                            </div>
                        </div>
                        
                        <!-- Notes Tab -->
                        <div x-show="activeTab === 'notes'" x-transition:enter="transition ease-out duration-300"
                             x-transition:enter-start="opacity-0 transform translate-x-4"
                             x-transition:enter-end="opacity-100 transform translate-x-0"
                             class="p-6 space-y-6">
                            
                            <!-- Add New Note -->
                            <div class="bg-white/50 dark:bg-gray-800/50 backdrop-blur rounded-xl p-4 border border-lilac-200/30 dark:border-lilac-700/30">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Neue Notiz</h3>
                                <div class="space-y-3">
                                    <select x-model="newNoteType" 
                                            class="w-full px-3 py-2 bg-white/70 dark:bg-gray-700/70 border border-lilac-300/30 rounded-lg focus:ring-2 focus:ring-lilac-500 focus:border-transparent dark:text-white">
                                        <option value="general">Allgemein</option>
                                        <option value="reminder">Erinnerung</option>
                                        <option value="billing">Abrechnung</option>
                                        <option value="important">Wichtig</option>
                                    </select>
                                    <input type="text" x-model="newNoteTitle" 
                                           placeholder="Titel (optional)" 
                                           class="w-full px-3 py-2 bg-white/70 dark:bg-gray-700/70 border border-lilac-300/30 rounded-lg focus:ring-2 focus:ring-lilac-500 focus:border-transparent dark:text-white placeholder-gray-400">
                                    <textarea x-model="newNoteContent" 
                                              placeholder="Notiz eingeben..." 
                                              rows="3"
                                              class="w-full px-3 py-2 bg-white/70 dark:bg-gray-700/70 border border-lilac-300/30 rounded-lg focus:ring-2 focus:ring-lilac-500 focus:border-transparent dark:text-white placeholder-gray-400"></textarea>
                                    <button @click="saveNote()" 
                                            :disabled="!newNoteContent.trim()"
                                            class="px-4 py-2 bg-gradient-to-r from-lilac-600 to-purple-600 text-white rounded-lg hover:from-lilac-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-lg hover:shadow-xl">
                                        <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V2"></path>
                                        </svg>
                                        Notiz speichern
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Notes List -->
                            <div class="space-y-3">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Alle Notizen</h3>
                                <template x-for="note in notes" :key="note.id">
                                    <div class="bg-white/50 dark:bg-gray-800/50 backdrop-blur rounded-xl p-4 border border-lilac-200/30 dark:border-lilac-700/30"
                                         :class="note.type === 'important' ? 'border-red-400/50' : ''">
                                        <div class="flex justify-between items-start mb-2">
                                            <div>
                                                <span :class="getNoteTypeClass(note.type)" class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium">
                                                    <span x-text="getNoteTypeText(note.type)"></span>
                                                </span>
                                                <span x-show="note.title" class="ml-2 font-semibold text-gray-900 dark:text-white" x-text="note.title"></span>
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <span class="text-xs text-gray-500 dark:text-gray-400" x-text="formatDateTime(note.created_at)"></span>
                                                <button @click="deleteNote(note.id)" class="text-red-500 hover:text-red-400 transition-colors">
                                                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                    </svg>
                                                </button>
                                            </div>
                                        </div>
                                        <p class="text-gray-900 dark:text-white whitespace-pre-wrap" x-text="note.content"></p>
                                        <p class="text-xs text-gray-500 dark:text-gray-400 mt-2" x-text="'Von: ' + (note.created_by_name || 'System')"></p>
                                    </div>
                                </template>
                                <div x-show="notes.length === 0" class="text-center py-8 text-gray-500 dark:text-gray-400">
                                    Noch keine Notizen vorhanden
                                </div>
                            </div>
                        </div>
                        
                        <!-- Documents Tab -->
                        <div x-show="activeTab === 'documents'" x-transition:enter="transition ease-out duration-300"
                             x-transition:enter-start="opacity-0 transform translate-x-4"
                             x-transition:enter-end="opacity-100 transform translate-x-0"
                             class="p-6 space-y-6">
                            
                            <!-- Upload New Document -->
                            <div class="bg-white/50 dark:bg-gray-800/50 backdrop-blur rounded-xl p-4 border border-lilac-200/30 dark:border-lilac-700/30">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">Dokument hochladen</h3>
                                <div class="space-y-3">
                                    <input type="text" x-model="newDocumentTitle" 
                                           placeholder="Dokumenttitel" 
                                           class="w-full px-3 py-2 bg-white/70 dark:bg-gray-700/70 border border-lilac-300/30 rounded-lg focus:ring-2 focus:ring-lilac-500 focus:border-transparent dark:text-white placeholder-gray-400">
                                    <div class="relative">
                                        <input type="file" 
                                               @change="handleDocumentSelect($event)" 
                                               accept=".pdf,.doc,.docx,.jpg,.jpeg,.png"
                                               class="w-full px-3 py-2 bg-white/70 dark:bg-gray-700/70 border border-lilac-300/30 rounded-lg focus:ring-2 focus:ring-lilac-500 focus:border-transparent dark:text-white file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-lilac-50 file:text-lilac-700 hover:file:bg-lilac-100 dark:file:bg-lilac-900 dark:file:text-lilac-200">
                                    </div>
                                    <button @click="uploadDocument()" 
                                            :disabled="!selectedDocument"
                                            class="px-4 py-2 bg-gradient-to-r from-lilac-600 to-purple-600 text-white rounded-lg hover:from-lilac-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-lg hover:shadow-xl">
                                        <svg class="w-4 h-4 mr-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                                        </svg>
                                        Hochladen
                                    </button>
                                </div>
                            </div>
                            
                            <!-- Documents List -->
                            <div class="space-y-3">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Dokumente</h3>
                                <div class="overflow-x-auto">
                                    <table class="w-full">
                                        <thead>
                                            <tr class="text-left text-sm text-gray-600 dark:text-gray-400 border-b border-gray-200 dark:border-gray-700">
                                                <th class="pb-2">Titel</th>
                                                <th class="pb-2">Typ</th>
                                                <th class="pb-2">Datum</th>
                                                <th class="pb-2">Aktionen</th>
                                            </tr>
                                        </thead>
                                        <tbody class="text-sm">
                                            <template x-for="doc in documents" :key="doc.id">
                                                <tr class="border-b border-gray-100 dark:border-gray-800">
                                                    <td class="py-3 text-gray-900 dark:text-white font-medium" x-text="doc.title"></td>
                                                    <td class="py-3 text-gray-600 dark:text-gray-400">
                                                        <span :class="getDocumentTypeClass(doc.type)" class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium">
                                                            <span x-text="getDocumentTypeText(doc.type)"></span>
                                                        </span>
                                                    </td>
                                                    <td class="py-3 text-gray-600 dark:text-gray-400" x-text="formatDate(doc.created_at)"></td>
                                                    <td class="py-3">
                                                        <div class="flex space-x-2">
                                                            <a :href="'/uploads/docs/' + doc.file_name" 
                                                               download
                                                               class="text-lilac-600 hover:text-lilac-500 transition-colors">
                                                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"></path>
                                                                </svg>
                                                            </a>
                                                            <button @click="deleteDocument(doc.id)" class="text-red-500 hover:text-red-400 transition-colors">
                                                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                                                </svg>
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </template>
                                        </tbody>
                                    </table>
                                    <div x-show="documents.length === 0" class="text-center py-8 text-gray-500 dark:text-gray-400">
                                        Noch keine Dokumente vorhanden
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Footer Actions -->
                    <div class="border-t border-gray-200 dark:border-gray-700 p-4 bg-gray-50 dark:bg-gray-800 flex justify-between">
                        <button @click="editPatient(patient)" 
                                class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                            </svg>
                            Bearbeiten
                        </button>
                        <button @click="open = false" 
                                class="inline-flex items-center px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors">
                            Schließen
                        </button>
                    </div>
                </div>
            </template>
        </div>
    </div>
</div>

<script>
function patientsManager() {
    return {
        patients: [],
        owners: [],
        loading: false,
        showModal: false,
        modalTitle: 'Neuer Patient',
        searchQuery: '',
        speciesFilter: '',
        searchTimeout: null,
        activeTab: 'patient',
        ownerMode: 'existing',
        currentPatient: {
            id: null,
            name: '',
            species: '',
            breed: '',
            birth_date: '',
            gender: 'unknown',
            weight: '',
            microchip: '',
            color: '',
            owner_id: '',
            notes: ''
        },
        currentOwner: {
            salutation: 'Herr',
            first_name: '',
            last_name: '',
            phone: '',
            mobile: '',
            email: '',
            street: '',
            house_number: '',
            postal_code: '',
            city: ''
        },

        async init() {
            await this.loadOwners();
            await this.loadPatients();
            
            // Get CSRF token if needed
            this.csrfToken = document.querySelector('meta[name="csrf-token"]')?.content || '';
        },

        async loadPatients() {
            this.loading = true;
            try {
                const params = new URLSearchParams({
                    action: 'list',
                    q: this.searchQuery,
                    species: this.speciesFilter
                });

                const response = await fetch(`/api/patients.php?${params}`);
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }
                
                const contentType = response.headers.get('content-type') || '';
                if (!contentType.includes('application/json')) {
                    throw new Error('Invalid JSON response');
                }
                
                const data = await response.json();
                
                // Support both new and old response formats
                if (data && (data.ok === true || data.status === 'success')) {
                    // New format: data.data.items, old format: data.data.data or data.data
                    const items = data.data?.items ?? data.data?.data ?? data.data ?? [];
                    this.patients = Array.isArray(items) ? items : [];
                    
                    // Animate cards on load
                    this.$nextTick(() => {
                        if (typeof anime !== 'undefined') {
                            anime({
                                targets: '.grid > div',
                                translateY: [20, 0],
                                opacity: [0, 1],
                                delay: anime.stagger(100),
                                duration: 600,
                                easing: 'easeOutQuad'
                            });
                        }
                    });
                } else {
                    throw new Error(data.error || 'Unbekannter Fehler');
                }
            } catch (error) {
                console.error('Fehler beim Laden der Patienten:', error);
                this.showNotification('Fehler beim Laden der Patienten: ' + error.message, 'error');
            } finally {
                this.loading = false;
            }
        },

        async loadOwners() {
            try {
                const response = await fetch('/api/owners.php?action=list');
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }
                
                const contentType = response.headers.get('content-type') || '';
                if (!contentType.includes('application/json')) {
                    throw new Error('Invalid JSON response');
                }
                
                const data = await response.json();
                
                // Support both new and old response formats
                if (data && (data.ok === true || data.status === 'success')) {
                    // New format: data.data.items, old format: data.data.data or data.data
                    const items = data.data?.items ?? data.data?.data ?? data.data ?? [];
                    this.owners = Array.isArray(items) ? items : [];
                } else {
                    throw new Error(data.error || 'Unbekannter Fehler');
                }
            } catch (error) {
                console.error('Fehler beim Laden der Besitzer:', error);
            }
        },

        debounceSearch() {
            clearTimeout(this.searchTimeout);
            this.searchTimeout = setTimeout(() => {
                this.loadPatients();
            }, 500);
        },

        openCreateModal() {
            this.modalTitle = 'Neuer Patient';
            this.activeTab = 'patient';
            this.ownerMode = 'existing';
            this.currentPatient = {
                id: null,
                name: '',
                species: '',
                breed: '',
                birth_date: '',
                gender: 'unknown',
                weight: '',
                microchip: '',
                color: '',
                owner_id: '',
                notes: ''
            };
            this.currentOwner = {
                salutation: 'Herr',
                first_name: '',
                last_name: '',
                phone: '',
                mobile: '',
                email: '',
                street: '',
                house_number: '',
                postal_code: '',
                city: ''
            };
            this.showModal = true;
        },

        editPatient(patient) {
            this.modalTitle = 'Patient bearbeiten';
            this.activeTab = 'patient';
            this.ownerMode = 'existing';
            this.currentPatient = {
                id: patient.id,
                name: patient.name,
                species: patient.species,
                breed: patient.breed || '',
                birth_date: patient.birth_date || '',
                gender: patient.gender || 'unknown',
                weight: patient.weight || '',
                microchip: patient.microchip || '',
                color: patient.color || '',
                owner_id: patient.owner_id,
                notes: patient.notes || ''
            };
            this.showModal = true;
        },

        closeModal() {
            this.showModal = false;
            if (typeof anime !== 'undefined') {
                anime({
                    targets: '.modal',
                    opacity: [1, 0],
                    duration: 300,
                    easing: 'easeOutQuad'
                });
            }
        },

        async savePatient() {
            try {
                const formData = new FormData();
                const action = this.currentPatient.id ? 'update' : 'create';
                
                // Add patient data
                if (this.currentPatient.id) {
                    formData.append('id', this.currentPatient.id);
                }
                formData.append('patient_name', this.currentPatient.name);
                formData.append('species', this.currentPatient.species);
                formData.append('breed', this.currentPatient.breed);
                formData.append('birthdate', this.currentPatient.birth_date);
                formData.append('gender', this.currentPatient.gender);
                formData.append('weight', this.currentPatient.weight);
                formData.append('microchip', this.currentPatient.microchip);
                formData.append('color', this.currentPatient.color);
                formData.append('notes', this.currentPatient.notes);
                
                // Add owner data based on mode
                if (this.ownerMode === 'existing') {
                    if (!this.currentPatient.owner_id) {
                        this.showNotification('Bitte wählen Sie einen Besitzer aus', 'error');
                        return;
                    }
                    formData.append('owner_mode', 'existing');
                    formData.append('owner_id', this.currentPatient.owner_id);
                } else if (this.ownerMode === 'new') {
                    // Validate new owner data
                    if (!this.currentOwner.first_name || !this.currentOwner.last_name) {
                        this.showNotification('Bitte geben Sie Vor- und Nachname des Besitzers ein', 'error');
                        return;
                    }
                    
                    // Add owner mode and fields
                    formData.append('owner_mode', 'new');
                    formData.append('owner_salutation', this.currentOwner.salutation);
                    formData.append('owner_first_name', this.currentOwner.first_name);
                    formData.append('owner_last_name', this.currentOwner.last_name);
                    formData.append('owner_phone', this.currentOwner.phone);
                    formData.append('owner_mobile', this.currentOwner.mobile);
                    formData.append('owner_email', this.currentOwner.email);
                    formData.append('owner_street', this.currentOwner.street);
                    formData.append('owner_house_number', this.currentOwner.house_number);
                    formData.append('owner_postal_code', this.currentOwner.postal_code);
                    formData.append('owner_city', this.currentOwner.city);
                }

                // Add CSRF token if available
                if (this.csrfToken) {
                    formData.append('_csrf_token', this.csrfToken);
                }
                
                const response = await fetch('/api/patients.php?action=' + action, {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }
                
                const contentType = response.headers.get('content-type') || '';
                if (!contentType.includes('application/json')) {
                    throw new Error('Invalid JSON response');
                }
                
                const data = await response.json();
                
                // Support both new and old response formats
                if (data && (data.ok === true || data.status === 'success')) {
                    this.closeModal();
                    await this.loadOwners(); // Reload owners if new one was created
                    await this.loadPatients();
                    
                    // Success animation
                    const message = this.currentPatient.id ? 'Patient erfolgreich aktualisiert!' : 'Patient erfolgreich angelegt!';
                    this.showNotification(message, 'success');
                } else {
                    this.showNotification(data.error || 'Fehler beim Speichern', 'error');
                }
            } catch (error) {
                console.error('Fehler beim Speichern:', error);
                this.showNotification('Fehler beim Speichern des Patienten', 'error');
            }
        },

        async deletePatient(patient) {
            if (!confirm(`Möchten Sie ${patient.name} wirklich löschen?`)) {
                return;
            }

            try {
                const formData = new FormData();
                formData.append('id', patient.id);
                
                // Add CSRF token if available
                if (this.csrfToken) {
                    formData.append('_csrf_token', this.csrfToken);
                }

                const response = await fetch('/api/patients.php?action=delete', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }
                
                const contentType = response.headers.get('content-type') || '';
                if (!contentType.includes('application/json')) {
                    throw new Error('Invalid JSON response');
                }
                
                const data = await response.json();
                
                // Support both new and old response formats
                if (data && (data.ok === true || data.status === 'success')) {
                    await this.loadPatients();
                    this.showNotification('Patient erfolgreich gelöscht!', 'success');
                } else {
                    this.showNotification(data.error || 'Fehler beim Löschen', 'error');
                }
            } catch (error) {
                console.error('Fehler beim Löschen:', error);
                this.showNotification('Fehler beim Löschen', 'error');
            }
        },

        async viewDetailModal(patient) {
            try {
                // Fetch fresh patient data with all details
                const response = await fetch(`/api/patients.php?action=get&id=${patient.id}`);
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }
                
                const data = await response.json();
                
                if (data && (data.ok === true || data.status === 'success')) {
                    // Get patient data from response
                    const detailedPatient = data.data?.items?.[0] || data.data?.[0] || data.patient || null;
                    
                    if (detailedPatient) {
                        // Update modal data
                        const modal = document.getElementById('patientDetailModal');
                        if (modal && modal.__x) {
                            modal.__x.$data.patient = detailedPatient;
                            modal.__x.$data.open = true;
                            
                            // Animate modal opening
                            this.$nextTick(() => {
                                if (typeof anime !== 'undefined') {
                                    anime({
                                        targets: '#patientDetailModalContent',
                                        scale: [0.9, 1],
                                        opacity: [0, 1],
                                        easing: 'easeOutExpo',
                                        duration: 400
                                    });
                                }
                            });
                        }
                    } else {
                        throw new Error('Patientendaten nicht gefunden');
                    }
                } else {
                    throw new Error(data.error || 'Fehler beim Laden');
                }
            } catch (error) {
                console.error('Fehler beim Laden der Patientendetails:', error);
                this.showNotification('Fehler beim Laden der Patientendetails', 'error');
            }
        },

        formatDate(dateString) {
            if (!dateString) return '—';
            try {
                const date = new Date(dateString);
                return date.toLocaleDateString('de-DE', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                });
            } catch {
                return dateString;
            }
        },

        getGenderName(gender) {
            const names = {
                'male': 'Männlich',
                'female': 'Weiblich',
                'neutered_male': 'Kastriert (männlich)',
                'spayed_female': 'Kastriert (weiblich)',
                'unknown': 'Unbekannt'
            };
            return names[gender] || 'Unbekannt';
        },

        getSpeciesIcon(species) {
            const icons = {
                'dog': '🐕',
                'cat': '🐈',
                'horse': '🐴',
                'rabbit': '🐰',
                'bird': '🦜',
                'reptile': '🦎',
                'other': '🐾'
            };
            return icons[species] || '🐾';
        },

        getSpeciesName(species) {
            const names = {
                'dog': 'Hund',
                'cat': 'Katze',
                'horse': 'Pferd',
                'rabbit': 'Hase',
                'bird': 'Vogel',
                'reptile': 'Reptil',
                'other': 'Andere'
            };
            return names[species] || 'Unbekannt';
        },

        calculateAge(birthDate) {
            if (!birthDate) return '';
            const birth = new Date(birthDate);
            const today = new Date();
            const age = today.getFullYear() - birth.getFullYear();
            const monthDiff = today.getMonth() - birth.getMonth();
            
            if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
                return (age - 1) + (age === 1 ? ' Jahr' : ' Jahre');
            }
            
            return age + (age === 1 ? ' Jahr' : ' Jahre');
        },

        showNotification(message, type) {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg text-white z-50 shadow-lg ${
                type === 'success' ? 'bg-green-500' : 'bg-red-500'
            }`;
            notification.textContent = message;
            document.body.appendChild(notification);

            // Animate if anime.js is available
            if (typeof anime !== 'undefined') {
                anime({
                    targets: notification,
                    translateX: [100, 0],
                    opacity: [0, 1],
                    duration: 300,
                    easing: 'easeOutQuad'
                });

                setTimeout(() => {
                    anime({
                        targets: notification,
                        translateX: [0, 100],
                        opacity: [1, 0],
                        duration: 300,
                        easing: 'easeInQuad',
                        complete: () => notification.remove()
                    });
                }, 3000);
            } else {
                // Fallback without animation
                setTimeout(() => notification.remove(), 3000);
            }
        }
    };
}
</script>
{% endblock %}